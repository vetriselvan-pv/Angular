
Void Subject 

Hey Devs 
    Welcome back to the Rxjs Subject series. Now we are goign to discuss about a strange Subject named Void Subject. 
    By declaring a void subject, you signal that the value is irrelevant. Only the event itself matters.

    syntax :  
        const subject = new Subject<void>();

    Example : 

        html 

        <h3>Void Subject</h3>

<div class="text-wrapper">
  <div class="text">
    <button class="btn-ghost" (click)="sendVoidSubject()" type="button">
      send
    </button>
  </div>
  <div class="example">
    <p>Void Subject Value :</p> 
    @for (item of voidObservable | async; track $index) {
      <div class="card">
        <div class="index">{{$index}}</div>
        <div class="data">{{ 'void subject emitted : ' + ' ' +  item | json }}</div>
      </div>
    } 
  </div>
</div>

ts 

import { Component, model, OnInit, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { AsyncSubject, BehaviorSubject, ReplaySubject, scan, Subject, tap } from 'rxjs';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-rxjs-operator',
  imports: [CommonModule, FormsModule],
  templateUrl: './rxjs-operator.html',
  styleUrl: './rxjs-operator.scss',
})
export class RxjsOperator implements OnInit{
   
  voidSubject = new Subject<void>();
  voidObservable = this.voidSubject.asObservable().pipe(
    scan((acc:string[], curr:any) => { 
      return [...acc, curr];
    }, [] as string[])
  );

  sendVoidSubject(){
    this.voidSubject.next();
  }
}

on click of the button new void event will be trigered . To show what is happening just subscribe the voidsubject using async pipe. 


output 

screenshot wil be added 

Case 1 : 
    Void operator are emitting event when button will be clicked . but there is not reponse value ( undefined ). 

Case 2 : 

    similar to subject , Void Subject also subscribed by number of observable . when ever void event triggered all the subscribers will get the callback . 

Case 3 : 

    What happen if i try to pass value to the void operator ?. Yeah Let try . If you try to pass value to the void subject it throw error.

   error :  Argument of type 'any' is not assignable to parameter of type 'void'.

   screenshot with error . 

Note : 

    you can decalare the void subject like const subject = new Subject(); internally this will also considered as void subject as no type is defined . 
    But this won't help us in the case where we mistakenly try to pass the value to the subject . Better define the subject with void type in the place of required. 
    

